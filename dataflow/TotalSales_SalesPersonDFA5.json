{
	"name": "TotalSales_SalesPersonDFA5",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlSampleDBSource",
						"type": "DatasetReference"
					},
					"name": "SalesTableSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSaleskonikadatabaseDS",
						"type": "DatasetReference"
					},
					"name": "sinkoutput"
				}
			],
			"transformations": [
				{
					"name": "AggregateSales"
				}
			],
			"script": "source(output(\n\t\tSalesPerson as string,\n\t\tLineTotal as decimal(38,6)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select c.SalesPerson, sd.LineTotal from [SalesLT].[Customer] c \\njoin [SalesLT].[SalesOrderHeader] sh on c.CustomerID = sh.CustomerID\\njoin [SalesLT].[SalesOrderDetail] sd on sh.SalesOrderID = sd.SalesOrderID',\n\tformat: 'query') ~> SalesTableSource\nSalesTableSource aggregate(groupBy(SalesPerson),\n\tTotalSales = sum(LineTotal)) ~> AggregateSales\nAggregateSales sink(input(\n\t\tSalesPerson as string,\n\t\tTotalSales as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSalesPerson,\n\t\tTotalSales\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkoutput"
		}
	}
}